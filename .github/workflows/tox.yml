name: tox

on:
  create:  # is used for publishing to TestPyPI
    tags:  # any tag regardless of its name, no branches
    - "**"
  push:  # only publishes pushes to the main branch to TestPyPI
    branches:  # any integration branch but not tag
    - "master"
  pull_request:
  release:
    types:
    - published  # It seems that you can publish directly without creating
  schedule:
  - cron: 4 0 10 * *  # Run 10th of month at 4AM

jobs:
  lint-mypy:
    name: lint and types
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - python_version: "3.7"
        - python_version: "3.8"
        - python_version: "3.9"
        - python_version: "3.10"

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python version
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install tox
      run: pip install tox
    - name: Run tox -e lint,mypy
      run: tox -e lint,mypy

  docs-packaging:
    name: docs and packaging
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python version
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install tox
      run: pip install tox
    - name: Run tox -e docs,packaging
      run: tox -e docs,packaging

  test:
    name: test
    runs-on: ubuntu-latest
    needs:
    - lint-mypy
    - docs-packaging
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python version
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        docker version
        docker info
        pip install tox
    - name: Run tox -e py3
      run: |
        tox -e py3

  publish:
    name: Publish to PyPI registry
    needs:
      - test
    runs-on: ubuntu-latest
    env:
      PY_COLORS: 1
    steps:
      - name: Setup python version
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install tox
        run: python -m pip install tox
      - name: Check out src from Git
        uses: actions/checkout@v2
        with:
          # Get shallow Git history (default) for release events
          # but have a complete clone for any other workflows.
          # Both options fetch tags but since we're going to remove
          # one from HEAD in non-create-tag workflows, we need full
          # history for them.
          fetch-depth: >-
            ${{
              (
                (
                  github.event_name == 'create' &&
                  github.event.ref_type == 'tag'
                ) ||
                github.event_name == 'release'
              ) &&
              1 || 0
            }}
      - name: Drop Git tags from HEAD for non-tag-create and non-release events
        if: >-
          (
            github.event_name != 'create' ||
            github.event.ref_type != 'tag'
          ) &&
          github.event_name != 'release'
        run: >-
          git tag --points-at HEAD
          |
          xargs git tag --delete
      - name: Build dists
        run: tox -e packaging
      - name: Publish to test.pypi.org
        if: >-
          (
            github.event_name == 'push' &&
            github.ref == format(
              'refs/heads/{0}', github.event.repository.default_branch
            )
          ) ||
          (
            github.event_name == 'create' &&
            github.event.ref_type == 'tag'
          )
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.testpypi_password }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish to pypi.org
        if: >-  # "create" workflows run separately from "push" & "pull_request"
          github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_password }}
